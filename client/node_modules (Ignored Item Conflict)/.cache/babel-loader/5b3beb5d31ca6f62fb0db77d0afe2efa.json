{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport apiClient from \"../../lib/ApiClient\";\nconst initialState = [];\nexport const fetchComments = createAsyncThunk(\"comments/fetchComments\", async () => {\n  const data = await apiClient.getComments();\n  return data;\n});\nexport const addComment = createAsyncThunk(\"comments/addComment\", async arg => {\n  const {\n    newComment,\n    callback\n  } = arg;\n  const data = await apiClient.addComment(newComment);\n\n  if (callback) {\n    callback();\n  }\n\n  return data;\n});\nconst commentSlice = createSlice({\n  name: \"comments\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchComments.fulfilled, (state, action) => {\n      const commentsWithoutReplies = action.payload.reduce((acc, comment) => {\n        const {\n          replies,\n          ...commentWithoutReplies\n        } = comment;\n        return acc.concat(commentWithoutReplies);\n      }, []);\n      return commentsWithoutReplies;\n    });\n    builder.addCase(addComment.fulfilled, (state, action) => {\n      state.push(action.payload);\n    });\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"sources":["/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/features/comments/comments.js"],"names":["createAsyncThunk","createSlice","apiClient","initialState","fetchComments","data","getComments","addComment","arg","newComment","callback","commentSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","commentsWithoutReplies","payload","reduce","acc","comment","replies","commentWithoutReplies","concat","push","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,aAAa,GAAGJ,gBAAgB,CAC3C,wBAD2C,EAE3C,YAAY;AACV,QAAMK,IAAI,GAAG,MAAMH,SAAS,CAACI,WAAV,EAAnB;AACA,SAAOD,IAAP;AACD,CAL0C,CAAtC;AAQP,OAAO,MAAME,UAAU,GAAGP,gBAAgB,CACxC,qBADwC,EAExC,MAAOQ,GAAP,IAAe;AACb,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BF,GAAjC;AACA,QAAMH,IAAI,GAAG,MAAMH,SAAS,CAACK,UAAV,CAAqBE,UAArB,CAAnB;;AACA,MAAIC,QAAJ,EAAc;AACZA,IAAAA,QAAQ;AACT;;AACD,SAAOL,IAAP;AACD,CATuC,CAAnC;AAYP,MAAMM,YAAY,GAAGV,WAAW,CAAC;AAC/BW,EAAAA,IAAI,EAAE,UADyB;AAE/BT,EAAAA,YAF+B;AAG/BU,EAAAA,QAAQ,EAAE,EAHqB;AAI/BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,aAAa,CAACa,SAA9B,EAAyC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1D,YAAMC,sBAAsB,GAAGD,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACrE,cAAM;AAAEC,UAAAA,OAAF;AAAW,aAAGC;AAAd,YAAwCF,OAA9C;AACA,eAAOD,GAAG,CAACI,MAAJ,CAAWD,qBAAX,CAAP;AACD,OAH8B,EAG5B,EAH4B,CAA/B;AAIA,aAAON,sBAAP;AACD,KAND;AAOAL,IAAAA,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACU,SAA3B,EAAsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvDD,MAAAA,KAAK,CAACU,IAAN,CAAWT,MAAM,CAACE,OAAlB;AACD,KAFD;AAGD;AAf8B,CAAD,CAAhC;AAkBA,eAAeV,YAAY,CAACkB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport apiClient from \"../../lib/ApiClient\";\n\nconst initialState = [];\n\nexport const fetchComments = createAsyncThunk(\n  \"comments/fetchComments\",\n  async () => {\n    const data = await apiClient.getComments();\n    return data;\n  }\n);\n\nexport const addComment = createAsyncThunk(\n  \"comments/addComment\",\n  async (arg) => {\n    const { newComment, callback } = arg;\n    const data = await apiClient.addComment(newComment);\n    if (callback) {\n      callback();\n    }\n    return data;\n  }\n);\n\nconst commentSlice = createSlice({\n  name: \"comments\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchComments.fulfilled, (state, action) => {\n      const commentsWithoutReplies = action.payload.reduce((acc, comment) => {\n        const { replies, ...commentWithoutReplies } = comment;\n        return acc.concat(commentWithoutReplies);\n      }, []);\n      return commentsWithoutReplies;\n    });\n    builder.addCase(addComment.fulfilled, (state, action) => {\n      state.push(action.payload);\n    });\n  },\n});\n\nexport default commentSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}