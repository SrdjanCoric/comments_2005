{"ast":null,"code":"var _jsxFileName = \"/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/App.js\";\nimport { useState, useEffect } from \"react\";\nimport AddCommentForm from \"./components/AddCommentForm\";\nimport Comments from \"./components/Comments\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [comments, setComments] = useState([]);\n  const handleMoreReplies = async id => {\n    const {\n      data\n    } = await axios.get(`/api/comment_replies?comment_id=${id}`);\n    setComments(comments.map(comment => {\n      if (comment.id === id) {\n        return Object.assign({}, comment, {\n          replies: comment.replies.concat(data)\n        });\n      } else {\n        return comment;\n      }\n    }));\n  };\n\n  const handleSubmit = async (newComment, callback) => {\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/comments\", { ...newComment\n      });\n      setComments(comments.concat(data));\n\n      if (callback) {\n        callback();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Comments, {\n      onMoreReplies: handleMoreReplies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCommentForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // App\n// Comments\n// CommentThread\n// Comment\n// AddCommentForm\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/App.js"],"names":["useState","useEffect","AddCommentForm","Comments","axios","App","handleMoreReplies","id","data","get","setComments","comments","map","comment","Object","assign","replies","concat","handleSubmit","newComment","callback","post","e","console","error"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AACb;AAEA,QAAMC,iBAAiB,GAAG,MAAOC,EAAP,IAAc;AACtC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,mCAAkCF,EAAG,EAAhD,CAAvB;AACAG,IAAAA,WAAW,CACTC,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACxB,UAAIA,OAAO,CAACN,EAAR,KAAeA,EAAnB,EAAuB;AACrB,eAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,EAA2B;AAChCG,UAAAA,OAAO,EAAEH,OAAO,CAACG,OAAR,CAAgBC,MAAhB,CAAuBT,IAAvB;AADuB,SAA3B,CAAP;AAGD,OAJD,MAIO;AACL,eAAOK,OAAP;AACD;AACF,KARD,CADS,CAAX;AAWD,GAbD;;AAeA,QAAMK,YAAY,GAAG,OAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AACnD,QAAI;AACF,YAAM;AAAEZ,QAAAA;AAAF,UAAW,MAAMJ,KAAK,CAACiB,IAAN,CAAW,eAAX,EAA4B,EAAE,GAAGF;AAAL,OAA5B,CAAvB;AACAT,MAAAA,WAAW,CAACC,QAAQ,CAACM,MAAT,CAAgBT,IAAhB,CAAD,CAAX;;AACA,UAAIY,QAAJ,EAAc;AACZA,QAAAA,QAAQ;AACT;AACF,KAND,CAME,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEhB;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEY;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CACD;AACA;AACA;AACA;AACA;;;KAzCSb,G;AA2CT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport AddCommentForm from \"./components/AddCommentForm\";\nimport Comments from \"./components/Comments\";\nimport axios from \"axios\";\n\nfunction App() {\n  // const [comments, setComments] = useState([]);\n\n  const handleMoreReplies = async (id) => {\n    const { data } = await axios.get(`/api/comment_replies?comment_id=${id}`);\n    setComments(\n      comments.map((comment) => {\n        if (comment.id === id) {\n          return Object.assign({}, comment, {\n            replies: comment.replies.concat(data),\n          });\n        } else {\n          return comment;\n        }\n      })\n    );\n  };\n\n  const handleSubmit = async (newComment, callback) => {\n    try {\n      const { data } = await axios.post(\"/api/comments\", { ...newComment });\n      setComments(comments.concat(data));\n      if (callback) {\n        callback();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <Comments onMoreReplies={handleMoreReplies} />\n      <AddCommentForm onSubmit={handleSubmit} />\n    </div>\n  );\n}\n// App\n// Comments\n// CommentThread\n// Comment\n// AddCommentForm\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}