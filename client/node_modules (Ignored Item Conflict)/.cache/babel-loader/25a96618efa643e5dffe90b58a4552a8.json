{"ast":null,"code":"// const replies = (state = [], action) => {\n//   switch (action.type) {\n//     case \"COMMENTS_RECEIVED\": {\n//       // action.payload == comments\n//       const replies = action.payload.reduce((acc, comment) => {\n//         const { replies } = comment;\n//         return acc.concat(replies);\n//       }, []);\n//       return replies;\n//     }\n//     case \"REPLIES_RECEIVED\": {\n//       return state.concat(action.payload);\n//     }\n//     default: {\n//       return state;\n//     }\n//   }\n// };\n// export default replies;\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport apiClient from \"../ApiClient\";\nimport { fetchComments } from \"./comments\";\nconst initialState = [];\nexport const fetchReplies = createAsyncThunk(\"fetchReplies\", async id => {\n  const data = apiClient.getReplies(id);\n  return data;\n});\nconst replySlice = createSlice({\n  name: \"reply\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchComments.fulfilled]: (state, action) => {\n      const replies = action.payload.reduce((acc, comment) => {\n        const {\n          replies\n        } = comment;\n        return acc.concat(replies);\n      }, []);\n      return replies;\n    },\n    [fetchReplies.fulfilled]: (state, action) => {\n      state.push(...action.payload);\n    }\n  }\n});\nexport default replySlice.reducer;","map":{"version":3,"sources":["/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/lib/reducers/replies.js"],"names":["createSlice","createAsyncThunk","apiClient","fetchComments","initialState","fetchReplies","id","data","getReplies","replySlice","name","reducers","extraReducers","fulfilled","state","action","replies","payload","reduce","acc","comment","concat","push","reducer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,aAAT,QAA8B,YAA9B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,gBAAgB,CAAC,cAAD,EAAiB,MAAOK,EAAP,IAAc;AACzE,QAAMC,IAAI,GAAGL,SAAS,CAACM,UAAV,CAAqBF,EAArB,CAAb;AACA,SAAOC,IAAP;AACD,CAH2C,CAArC;AAKP,MAAME,UAAU,GAAGT,WAAW,CAAC;AAC7BU,EAAAA,IAAI,EAAE,OADuB;AAE7BN,EAAAA,YAF6B;AAG7BO,EAAAA,QAAQ,EAAE,EAHmB;AAI7BC,EAAAA,aAAa,EAAE;AACb,KAACT,aAAa,CAACU,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACtD,cAAM;AAAEJ,UAAAA;AAAF,YAAcI,OAApB;AACA,eAAOD,GAAG,CAACE,MAAJ,CAAWL,OAAX,CAAP;AACD,OAHe,EAGb,EAHa,CAAhB;AAIA,aAAOA,OAAP;AACD,KAPY;AAQb,KAACX,YAAY,CAACQ,SAAd,GAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACQ,IAAN,CAAW,GAAGP,MAAM,CAACE,OAArB;AACD;AAVY;AAJc,CAAD,CAA9B;AAkBA,eAAeR,UAAU,CAACc,OAA1B","sourcesContent":["// const replies = (state = [], action) => {\n//   switch (action.type) {\n//     case \"COMMENTS_RECEIVED\": {\n//       // action.payload == comments\n//       const replies = action.payload.reduce((acc, comment) => {\n//         const { replies } = comment;\n//         return acc.concat(replies);\n//       }, []);\n//       return replies;\n//     }\n//     case \"REPLIES_RECEIVED\": {\n//       return state.concat(action.payload);\n//     }\n//     default: {\n//       return state;\n//     }\n//   }\n// };\n\n// export default replies;\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport apiClient from \"../ApiClient\";\nimport { fetchComments } from \"./comments\";\n\nconst initialState = [];\n\nexport const fetchReplies = createAsyncThunk(\"fetchReplies\", async (id) => {\n  const data = apiClient.getReplies(id);\n  return data;\n});\n\nconst replySlice = createSlice({\n  name: \"reply\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchComments.fulfilled]: (state, action) => {\n      const replies = action.payload.reduce((acc, comment) => {\n        const { replies } = comment;\n        return acc.concat(replies);\n      }, []);\n      return replies;\n    },\n    [fetchReplies.fulfilled]: (state, action) => {\n      state.push(...action.payload);\n    },\n  },\n});\n\nexport default replySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}