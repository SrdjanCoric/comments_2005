{"ast":null,"code":"var _jsxFileName = \"/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/components/AddCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addComment } from \"../lib/reducers/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCommentForm = () => {\n  _s();\n\n  const [author, setAuthor] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch(addComment({\n        newComment: {\n          author,\n          body\n        },\n        callback: resetInputs\n      }));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const resetInputs = () => {\n    setAuthor(\"\");\n    setBody(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    \"aria-label\": \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"author\",\n        type: \"text\",\n        name: \"author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        name: \"body\",\n        onChange: e => setBody(e.target.value),\n        value: body,\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCommentForm, \"lgsqzeMv0g3QDDZOWz2ey83DUfM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddCommentForm;\nexport default AddCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"sources":["/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/components/AddCommentForm.js"],"names":["useState","useDispatch","addComment","AddCommentForm","author","setAuthor","body","setBody","dispatch","handleSubmit","e","preventDefault","newComment","callback","resetInputs","console","error","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACFH,MAAAA,QAAQ,CACNN,UAAU,CAAC;AAAEU,QAAAA,UAAU,EAAE;AAAER,UAAAA,MAAF;AAAUE,UAAAA;AAAV,SAAd;AAAgCO,QAAAA,QAAQ,EAAEC;AAA1C,OAAD,CADJ,CAAR;AAGD,KAJD,CAIE,OAAOJ,CAAP,EAAU;AACVK,MAAAA,OAAO,CAACC,KAAR,CAAcN,CAAd;AACD;AACF,GATD;;AAWA,QAAMI,WAAW,GAAG,MAAM;AACxBT,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAIA,sBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,kBAAW,MAA3B;AAAkC,IAAA,QAAQ,EAAEE,YAA5C;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAEL,MAJT;AAKE,QAAA,QAAQ,EAAGM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAGR,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACO,MAAF,CAASC,KAAV,CAH1B;AAIE,QAAA,KAAK,EAAEZ,IAJT;AAKE,QAAA,IAAI,EAAC,IALP;AAME,QAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAwBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAjDD;;GAAMH,c;UAIaF,W;;;KAJbE,c;AAmDN,eAAeA,cAAf","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addComment } from \"../lib/reducers/comments\";\n\nconst AddCommentForm = () => {\n  const [author, setAuthor] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      dispatch(\n        addComment({ newComment: { author, body }, callback: resetInputs })\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const resetInputs = () => {\n    setAuthor(\"\");\n    setBody(\"\");\n  };\n  return (\n    <form action=\"\" aria-label=\"form\" onSubmit={handleSubmit}>\n      <h2>Post a Comment</h2>\n      <div className=\"input-group\">\n        <label htmlFor=\"author\">Your Name</label>\n        <input\n          id=\"author\"\n          type=\"text\"\n          name=\"author\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"body\">Your Comment</label>\n        <textarea\n          id=\"body\"\n          name=\"body\"\n          onChange={(e) => setBody(e.target.value)}\n          value={body}\n          cols=\"30\"\n          rows=\"10\"\n        ></textarea>\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default AddCommentForm;\n"]},"metadata":{},"sourceType":"module"}