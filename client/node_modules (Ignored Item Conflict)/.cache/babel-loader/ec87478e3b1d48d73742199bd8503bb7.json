{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport commentReducer from \"../features/comments/comments\";\nconst store = configureStore({\n  reducer: {\n    comments: commentReducer,\n    replies: replyReducer\n  }\n});\nexport default store;\n/*\n// Store\n// {\n    products: [],\n    cart: [],\n    loading: false\n//}\n\n// action\n     {type: \"PRODUCTS_RECEIVED\", payload: {products, loading}}\n\n// action creator -> function that returns an object (action)\n\n  dispatch\n     sending an action to the store (calling all reducer function)\n\n  reducer - function\n\n  When you dispatch an action ALL reducers are called\n\n  const products = (state, action) => {\n    switch(action.type) {\n      case \"PRODUCTS_RECEIVED\"\n    }\n  }\n\n  const cart = (state, action) => {\n    switch(action.type) {\n      default: {\n        return state\n      }\n    }\n  }\n*/","map":{"version":3,"sources":["/Users/srdjancoric/Dropbox/Capstone_Support_Final/2205/comments_exercise_boilerplate/client/src/lib/store.js"],"names":["configureStore","commentReducer","store","reducer","comments","replies","replyReducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAC3BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEH,cADH;AAEPI,IAAAA,OAAO,EAAEC;AAFF;AADkB,CAAD,CAA5B;AAOA,eAAeJ,KAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport commentReducer from \"../features/comments/comments\";\n\nconst store = configureStore({\n  reducer: {\n    comments: commentReducer,\n    replies: replyReducer,\n  },\n});\n\nexport default store;\n/*\n// Store\n// {\n    products: [],\n    cart: [],\n    loading: false\n//}\n\n// action\n     {type: \"PRODUCTS_RECEIVED\", payload: {products, loading}}\n\n// action creator -> function that returns an object (action)\n\n  dispatch\n     sending an action to the store (calling all reducer function)\n\n  reducer - function\n\n  When you dispatch an action ALL reducers are called\n\n  const products = (state, action) => {\n    switch(action.type) {\n      case \"PRODUCTS_RECEIVED\"\n    }\n  }\n\n  const cart = (state, action) => {\n    switch(action.type) {\n      default: {\n        return state\n      }\n    }\n  }\n*/\n"]},"metadata":{},"sourceType":"module"}